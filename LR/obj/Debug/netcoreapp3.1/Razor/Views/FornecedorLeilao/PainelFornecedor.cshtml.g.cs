#pragma checksum "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "85b3075a8917bb300230b584cfe764c40857f7bc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FornecedorLeilao_PainelFornecedor), @"mvc.1.0.view", @"/Views/FornecedorLeilao/PainelFornecedor.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Copiar\LR - github\LR\Views\_ViewImports.cshtml"
using LR;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Copiar\LR - github\LR\Views\_ViewImports.cshtml"
using LR.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"85b3075a8917bb300230b584cfe764c40857f7bc", @"/Views/FornecedorLeilao/PainelFornecedor.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bfd7e4aad9a9e246da34990f406f742a95fce54c", @"/Views/_ViewImports.cshtml")]
    public class Views_FornecedorLeilao_PainelFornecedor : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LR.Models.Leilao>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("selected", new global::Microsoft.AspNetCore.Html.HtmlString("selected"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/FornecedorLeilao/SubmeterNovoLance"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formNovoLance"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formCancelar"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/FornecedorLeilao/CancelarLeilao"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
  
    ViewData["Title"] = "PainelFornecedor";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>

    #clockdiv {
        font-family: sans-serif;
        color: #fff;
        display: inline-block;
        font-weight: 100;
        text-align: center;
    }

        #clockdiv > div {
            padding: 10px;
            border-radius: 3px;
            background: #00BF96;
            display: inline-block;
        }

        #clockdiv div > span {
            padding: 15px;
            border-radius: 3px;
            background: #00816A;
            display: inline-block;
        }

    .lucro {
        background: green;
        color: white;
        text-align: center;
    }

    .prejuizo {
        background: red;
        color: white;
        text-align: center;
    }

    .semlucro {
        background: yellow;
        color: black;
        text-align: center;
    }

    .normal {
        background: white;
        color: black;
        text-align: center;
    }

    #clockdivRodada {
        font-family: sans-serif;
        color: #fff;");
            WriteLiteral(@"
        display: inline-block;
        font-weight: 100;
        text-align: center;
    }

        #clockdivRodada > div {
            padding: 10px;
            border-radius: 3px;
            background: #00BF96;
            display: inline-block;
        }

        #clockdivRodada div > span {
            padding: 15px;
            border-radius: 3px;
            background: #00816A;
            display: inline-block;
        }

    .smalltext {
        padding-top: 5px;
        font-size: 16px;
    }

</style>
<h1>Painel do Fornecedor</h1>
<hr />
<div class=""container "" id=""divChat"">
    <div id=""divChat"" class=""mylogin"">
        <div class=""row"" id=""formChat"">
            <div class=""col-sm-6"">
                <div>
                    <dl class=""row"">
                        <dt class=""col-sm-6"">
                            Nr. LR
                        </dt>
                        <dd class=""col-sm-6"">
                            ");
#nullable restore
#line 93 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Html.DisplayFor(model => model.IdLeilao));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dd>\r\n                        <dt class=\"col-sm-6\">\r\n                            ");
#nullable restore
#line 96 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Html.DisplayNameFor(model => model.DataAberturaLance));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dt>\r\n                        <dd class=\"col-sm-6\">\r\n                            ");
#nullable restore
#line 99 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Html.DisplayFor(model => model.DataAberturaLance));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dd>\r\n                        <dt class=\"col-sm-6\">\r\n                            ");
#nullable restore
#line 102 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Html.DisplayNameFor(model => model.DataFechamento));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dt>\r\n                        <dd class=\"col-sm-6\">\r\n                            ");
#nullable restore
#line 105 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Html.DisplayFor(model => model.DataFechamento));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dd>\r\n                        <dt class=\"col-sm-6\">\r\n                            ");
#nullable restore
#line 108 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Html.DisplayNameFor(model => model.Requisicao));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dt>\r\n                        <dd class=\"col-sm-12\" style=\"font-size:11px\">\r\n                            ");
#nullable restore
#line 111 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Html.DisplayFor(model => model.Requisicao));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dd>\r\n                        <dt class=\"col-sm-6\">\r\n                            ");
#nullable restore
#line 114 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Html.DisplayNameFor(model => model.IdTipoLeilaoNavigation));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dt>\r\n                        <dd class=\"col-sm-6\" style=\"background-color:deepskyblue\">\r\n                            ");
#nullable restore
#line 117 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Html.DisplayFor(model => model.IdTipoLeilaoNavigation.Descricao));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dd>\r\n                        <dt class=\"col-sm-6\">\r\n                            Prioridade do comprador\r\n                        </dt>\r\n                        <dd class=\"col-sm-6\">\r\n");
#nullable restore
#line 123 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                             if (Model.IdAtributoPrecoPrazo1 == 1)
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 125 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                           Write(Html.Raw("Menor preço"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 125 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                        
                            }
                            else if (Model.IdAtributoPrecoPrazo1 == 2)
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 128 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                           Write(Html.Raw("Menor prazo"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 128 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                        
                                else if (Model.IdAtributoPrecoPrazo1 == 3)
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 130 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                               Write(Html.Raw("Menor preço e prazo"));

#line default
#line hidden
#nullable disable
            WriteLiteral("                        </dd>\r\n                        <dt class=\"col-sm-6\">\r\n                            Lance Atual\r\n                        </dt>\r\n                        <dd class=\"col-sm-6\">\r\n                            ");
#nullable restore
#line 136 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(ViewBag.DescAtributoPrecoPrazo);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n                <div class=\"row\" id=\"divNovoLance\">\r\n                    <div class=\"col-md-12\">\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85b3075a8917bb300230b584cfe764c40857f7bc14059", async() => {
                WriteLiteral("\r\n                            <input type=\"hidden\" name=\"id\"");
                BeginWriteAttribute("value", " value=\"", 4766, "\"", 4801, 1);
#nullable restore
#line 143 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
WriteAttributeValue("", 4774, ViewBag.IdFornecedorLeilao, 4774, 27, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" />
                            <dl class=""row "">
                                <dt class=""col-sm-6"">
                                    <label class=""control-label""><b>Novo Lance (Preço e Prazo)</b></label>
                                </dt>
                                <dd class=""col-sm-6"">
                                    <select class=""form-control"" id=""AtributoPrecoPrazo"" name=""AtributoPrecoPrazo"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85b3075a8917bb300230b584cfe764c40857f7bc15246", async() => {
                    WriteLiteral("Selecione");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 151 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                         foreach (var item in (SelectList)ViewBag.AtributoPrecoPrazo)
                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85b3075a8917bb300230b584cfe764c40857f7bc16939", async() => {
#nullable restore
#line 153 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                                     Write(item.Text);

#line default
#line hidden
#nullable disable
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 153 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                WriteLiteral(item.Value);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 154 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                        }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                        }
                                    </select>
                                </dd>
                            </dl>
                            <dl class=""row"">
                                <dt class=""col-sm-6"">
                                    Lucro/Prejuízo estimado
                                </dt>
                                <dd class=""col-sm-6"" id=""lucroEstimado"">

                                </dd>
                            </dl>
                            <div class=""form-group"">
                                <input type=""submit"" id=""gravarNovoLance"" disabled=""disabled"" value=""Submeter"" class=""btn btn-primary"" />
                            </div>
                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                    </div>\r\n                </div>\r\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85b3075a8917bb300230b584cfe764c40857f7bc21153", async() => {
                WriteLiteral("\r\n                    <div class=\"form-group\">\r\n                        <input type=\"hidden\" name=\"id\"");
                BeginWriteAttribute("value", " value=\"", 6646, "\"", 6681, 1);
#nullable restore
#line 175 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
WriteAttributeValue("", 6654, ViewBag.IdFornecedorLeilao, 6654, 27, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\r\n                        <input type=\"submit\" id=\"btnVencedor\" value=\"Cancelar Lance\" class=\"btn btn-danger\" />\r\n                    </div>\r\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

                <div>
                    <table class=""table table-bordered tabelaUsuariosOnline table-responsive"">
                        <thead id=""cabecalhoUsuarioOnlines"">
                            <tr>
                                <th colspan=""4"" class=""text-center"" style=""color:blue"">
                                    Meu histórico de Lances deste LR
                                </th>
                            </tr>
                            <tr>
                                <th>Rodada</th>
                                <th class=""text-center"">Data / Hora</th>
                                <th class=""text-center"">Lance</th>
                            </tr>
                        </thead>
                        <tbody id=""meuHistorico""></tbody>
                    </table>
                </div>

            </div>
            <div class=""col-sm-5"">
                <h4>Tempo para encerramento final do LR</h4>
                <div id=""clockdiv"">
        ");
            WriteLiteral(@"            <div>
                        <div class=""smalltextClock""><span class=""minutesClock""></span> Minutos</div>
                    </div>
                    <div>
                        <div class=""smalltextClock""><span class=""secondsClock""></span> Segundos</div>
                    </div>
                </div>
                <p style=""color:red; display:none"" id=""mensagemInicial"">Aguarde o comprador apurar o(s) vencedor(es). Você será redirecionado para a tela de resultados...</p>
                <br />
                <br />
");
#nullable restore
#line 212 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                 if (ViewBag.IdTipoLeilao == 3 || ViewBag.IdTipoLeilao == 4)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    <div>
                        <h4>Tempo para encerrar a rodada</h4>
                        <div id=""clockdivRodada"">
                            <div>
                                <div class=""smalltextClockRodada""><span class=""minutesClockRodada""></span> Minutos</div>
                            </div>
                            <div>
                                <div class=""smalltextClockRodada""><span class=""secondsClockRodada""></span> Segundos</div>
                            </div>
                        </div>
                        <h4>Número  rodada: <span id=""spanRodada""></span>  </h4>
                        <h4>Lance indicado p/ rodada: <span id=""spanLanceInicial""></span>  </h4>
                    </div>
");
#nullable restore
#line 227 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                <div>
                    <table class=""table table-bordered tabelaUsuariosOnline table-responsive"">
                        <thead id=""cabecalhoUsuarioOnlines"">
                            <tr>
                                <th colspan=""4"" class=""text-center"" style=""color: #1b6ec2"">
                                    Últimos lances dos seus concorrentes do LR
                                </th>
                            </tr>
                            <tr>
                                <th>Rodada</th>
                                <th class=""text-center"">Data / Hora</th>
                                <th class=""text-center"">Lance</th>
                            </tr>
                        </thead>
                        <tbody id=""lancesDosConcorrentes""></tbody>
                    </table>
                </div>
                <h5>Últimos 3 lances ganhadores de Leilões Reversos</h5>
                <table class=""table"" style=""font-size:11px"">
          ");
            WriteLiteral(@"          <thead>
                        <tr>
                            <th>
                                Dt. Fechamento LR
                            </th>
                            <th>
                                Modelo de LR
                            </th>
                            <th>
                                Prioridade do comprador
                            </th>
                            <th>
                                Lance
                            </th>
                        </tr>
                    </thead>
                    <tbody>
");
#nullable restore
#line 264 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                         if (ViewBag.HistoricoLeilaoMV != null)
                        {
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 266 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                             foreach (var item in (List<HistoricoLeilaoMV>)ViewBag.HistoricoLeilaoMV)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <tr>\r\n                                    <td>\r\n                                        ");
#nullable restore
#line 270 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                   Write(Html.DisplayFor(modelItem => item.DataFechamento));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                    </td>\r\n                                    <td>\r\n                                        ");
#nullable restore
#line 273 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                   Write(Html.DisplayFor(modelItem => item.TipoLeilao));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                    </td>\r\n                                    <td>\r\n");
#nullable restore
#line 276 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                         if (item.IdOpcaoComprador == 1)
                                        {
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 278 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                       Write(Html.Raw("Menor preço"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 278 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                                    
                                        }
                                        else if (item.IdOpcaoComprador == 2)
                                        {
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 282 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                       Write(Html.Raw("Menor prazo"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 282 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                                    
                                        }
                                        else if (item.IdOpcaoComprador == 3)
                                        {
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 286 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                       Write(Html.Raw("Menor preço e prazo"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 286 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                                            
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    </td>\r\n                                    <td>\r\n                                        ");
#nullable restore
#line 290 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                   Write(Html.DisplayFor(modelItem => item.DescAtributoPrecoPrazo));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                    </td>\r\n                                </tr>\r\n");
#nullable restore
#line 293 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 293 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                             
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
                WriteLiteral("<script type=\"text/javascript\">\r\n        var idComprador = \'");
#nullable restore
#line 309 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                      Write(Model.IdComprador);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var idFornecedor = \'");
#nullable restore
#line 310 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(ViewBag.IdFornecedor);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var dataComprador = \'");
#nullable restore
#line 311 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                        Write(ViewBag.Data);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var idTipoLeilao = \'");
#nullable restore
#line 312 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(ViewBag.IdTipoLeilao);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var idLeilao = \'");
#nullable restore
#line 313 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                   Write(ViewBag.IdLeilao);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var idCusto = \'");
#nullable restore
#line 314 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                  Write(Model.IdCurso);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n\r\n        var aApuracao = 0;\r\n        var lRCancelado = 0;\r\n        var timeintervalCallServer = null;\r\n        var fornecedorNovo = 0;\r\n        var rodada = \'");
#nullable restore
#line 320 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                 Write(Model.Rodada);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var valorInicial = \'");
#nullable restore
#line 321 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                       Write(Model.ValorInicial);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
        $('#spanRodada').text(rodada);
        if (idTipoLeilao == ""3"" || idTipoLeilao == ""4"") {
            var valorInicialMoeda2 = parseFloat(valorInicial.replace("","", "".""));
            var valorInicialMoeda = valorInicialMoeda2.toLocaleString(""pt-BR"", { style: ""currency"", currency: ""BRL"" });
            $('#spanLanceInicial').text(valorInicialMoeda);
        }

        $(""#AtributoPrecoPrazo"").change(function () {
            let valor = $(this).val();
            if (valor != """") {
                $('#gravarNovoLance').prop('disabled', false);
                $(""#lucroEstimado"").removeClass(""normal"");
                $(""#lucroEstimado"").removeClass(""prejuizo"");
                $(""#lucroEstimado"").removeClass(""lucro"");
                $(""#lucroEstimado"").removeClass(""semlucro"");
                if (idCusto == '1' && valor == ""1"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,18 - prejuízo baixo"");
                ");
                WriteLiteral(@"}
                if (idCusto == '2' && valor == ""1"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,38 - prejuízo médio"");
                }
                if (idCusto == '3' && valor == ""1"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,68 - prejuízo alto"");
                }
                else if (idCusto == '1' && valor == ""2"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,10 - prejuízo baixo"");
                }
                else if (idCusto == '2' && valor == ""2"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,30 - prejuízo médio"");
                }
                else if (idCusto == '3' && valor == ""2"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado");
                WriteLiteral(@"').text(""R$ -0,60 - prejuízo alto"");
                }
                else if (idCusto == '1' && valor == ""3"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,02 - prejuízo baixo"");
                }
                else if (idCusto == '2' && valor == ""3"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,23 - prejuízo médio"");
                }
                else if (idCusto == '3' && valor == ""3"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,53 - prejuízo alto"");
                }
                else if (idCusto == '1' && valor == ""4"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,10 - lucro baixo"");
                }
                else if (idCusto == '2' && valor == ""4"") {
                    $(""#lucroEstimado"").add");
                WriteLiteral(@"Class(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,10 - prejuízo baixo"");
                }
                else if (idCusto == '3' && valor == ""4"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,40 - prejuízo alto"");
                }
                else if (idCusto == '1' && valor == ""5"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,20 - lucro baixo"");
                }
                else if (idCusto == '2' && valor == ""5"") {
                    $(""#lucroEstimado"").addClass(""semlucro"");
                    $('#lucroEstimado').text(""R$ 0,00 - sem lucro ou prejuízo"");
                }
                else if (idCusto == '3' && valor == ""5"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,30 - prejuízo baixo"");
                }
                else if (idCusto == '1'");
                WriteLiteral(@" && valor == ""6"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,30  - lucro médio"");
                }
                else if (idCusto == '2' && valor == ""6"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,10  - lucro baixo"");
                }
                else if (idCusto == '3' && valor == ""6"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,20 - prejuízo baixo"");
                }
                else if (idCusto == '1' && valor == ""7"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,38  - lucro médio"");
                }
                else if (idCusto == '2' && valor == ""7"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,18  - lucro baixo"");
                ");
                WriteLiteral(@"}
                else if (idCusto == '3' && valor == ""7"") {
                    $(""#lucroEstimado"").addClass(""prejuizo"");
                    $('#lucroEstimado').text(""R$ -0,13  - prejuízo baixo"");
                }
                else if (idCusto == '1' && valor == ""8"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,50  - lucro alto"");
                }
                else if (idCusto == '2' && valor == ""8"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,30  - lucro médio"");
                }
                else if (idCusto == '3' && valor == ""8"") {
                    $(""#lucroEstimado"").addClass(""semlucro"");
                    $('#lucroEstimado').text(""R$ 0,00  - sem lucro ou prejuízo"");
                }
                else if (idCusto == '1' && valor == ""9"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstim");
                WriteLiteral(@"ado').text(""R$ 0,63  - lucro alto"");
                }
                else if (idCusto == '2' && valor == ""9"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,43  - lucro médio"");
                }
                else if (idCusto == '3' && valor == ""9"") {
                    $(""#lucroEstimado"").addClass(""lucro"");
                    $('#lucroEstimado').text(""R$ 0,13  - lucro baixo"");
                }
            } else {
                $(""#lucroEstimado"").addClass(""normal"");
                $('#lucroEstimado').text("""");
                $('#gravarNovoLance').prop('disabled', true);
            }
        });


    document.addEventListener('DOMContentLoaded', function () {
        var connection = new signalR.HubConnectionBuilder()
            .withUrl('/chat')
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.on('broadcastMudaRodadaFornecedor', function (idCompradorSen");
                WriteLiteral(@"der, idLeilaoSender, rodadaSender, valorInicialSender) {
            console.log(""broadcastMudaRodada1 idCompradorSender: "" + idCompradorSender + "" idLeilaoSender: "" + idLeilaoSender + "" rodadaSender: "" + rodadaSender);
            if (rodadaSender == 4) {
                debugger
                return false;
            }
            if (idCompradorSender == idComprador && idLeilaoSender == idLeilao) {
                console.log(""broadcastMudaRodada2 idCompradorSender: "" + idCompradorSender + "" idLeilaoSender: "" + idLeilaoSender + "" rodadaSender: "" + rodadaSender);
                rodada = rodadaSender;
                $('#spanRodada').text(rodadaSender);
                if (idTipoLeilao == ""3"" || idTipoLeilao == ""4"") {
                    var valorInicialMoeda2 = parseFloat(valorInicialSender.replace("","", "".""));
                    var valorInicialMoeda = valorInicialMoeda2.toLocaleString(""pt-BR"", { style: ""currency"", currency: ""BRL"" });
                    $('#spanLanceInicial').text(valorIn");
                WriteLiteral(@"icialMoeda);
                }
                return;
            }
        });

        connection.on('broadcastFornecedorLRCancelado', function (idCompradorSender, idLeilaoSender, idFornecedorSender) {
            if (idCompradorSender == idComprador && idLeilaoSender == idLeilao && idFornecedorSender && idFornecedor && lRCancelado < 1) {
                lRCancelado = lRCancelado + 1;
                bootbox.alert(""O LR que você estava ligado foi cancelado. Por favor, clique na Página Inicial e aguarde convite de novo LR"");
                if (lRCancelado == 2) {
                    console.log(""broadcastFornecedorLRCancelado lRCancelado= "" + lRCancelado + "" idCompradorSender: "" + idCompradorSender + "" idLeilaoSender: "" + idLeilaoSender);
                    clearInterval(timeintervalCallServer);
                }
                return;
            }
        });


        connection.on('broadcastCompradorFornecedorNovo', function (idCompradorSender, idFornecedorSender, idLeilaoSender) {");
                WriteLiteral(@"
            console.log(""broadcastCompradorFornecedorNovo idFornecedorSender="" + idFornecedorSender + "" idFornecedor="" + idFornecedor + "" idCompradorSender="" + idCompradorSender + "" idComprador="" + idComprador);
            if (idCompradorSender == idComprador && idFornecedorSender == idFornecedor && fornecedorNovo < 1) {
                fornecedorNovo = fornecedorNovo + 1;
                bootbox.alert(""O comprador do seu time acabou de criar um LR. Por favor clique em Participar de LR"");
                return;
            }
        });

        connection.on('broadcastFornecedorAguardandoApuracao', function (idCompradorSender, idLeilaoSender) {
            if (idCompradorSender == idComprador && idLeilaoSender == idLeilao && aApuracao < 1) {
                aApuracao = aApuracao + 1;
                bootbox.alert(""O LR que você estava ligado foi encerrado. Por favor, aguarde o comprador apurar os resultados"");
                return;
            }
        });

        connection.on('broad");
                WriteLiteral(@"castFornecedorApurado', function (idCompradorSender, idFornecedorSender, idTipoLeilaoSender, idLeilaoSender) {
            console.log(""broadcastFornecedorApurado  idCompradorSender: "" + idCompradorSender + "" idFornecedor="" + idFornecedor + "" idFornecedorSender="" + idFornecedorSender + "" idLeilaoSender: "" + idLeilaoSender);
            if (idFornecedorSender == idFornecedor && idLeilaoSender == idLeilao) {
                    idTipoLeilao = idTipoLeilaoSender;
                    var resultado = window.location.origin + ""/FornecedorLeilao/Resultado/"" + idLeilaoSender;
                    window.location.replace(resultado);
                    return;
                }
            });


            connection.on('broadcastFornecedorLancesConcorrentes', function (idCompradorSender, lancesJson, idFornecedorSender) {
                console.log(""broadcastFornecedorLancesConcorrentes entrada "" + "" idCompradorSender: "" + idCompradorSender + "" idFornecedorSender: "" + idFornecedorSender + "" rodada: "" + ro");
                WriteLiteral(@"dada);
                if (idComprador == idCompradorSender && idFornecedorSender == idFornecedor) {
                    var lancesJsonArray = JSON.parse(lancesJson);
                    $('#lancesDosConcorrentes').empty();
                    var valorLance = ""R$ *****"";
                    $.each(lancesJsonArray, function (idx, obj) {
                        if (obj.Rodada == 4) {
                            debugger
                            return false;
                        }
                        if (obj.IdFornecedor != idFornecedor) {
                            console.log(""broadcastFornecedorLancesConcorrentes entrou "" + "" idCompradorSender: "" + idCompradorSender + "" idFornecedorSender: "" + idFornecedorSender + "" rodada: "" + rodada + "" valinicial ="" + obj.ValorInicial);
                            if (obj.Rodada == 0 || obj.Rodada == null) {
                                rodada = ""Única"";
                            } else {
                                rodada = obj.Rodada;");
                WriteLiteral(@"
                                if (idTipoLeilao == ""3"" || idTipoLeilao == ""4"") {
                                    var valorInicialMoeda2 = parseFloat(obj.ValorInicial.replace("","", "".""));
                                    var valorInicialMoeda = valorInicialMoeda2.toLocaleString(""pt-BR"", { style: ""currency"", currency: ""BRL"" });
                                    $('#spanLanceInicial').text(valorInicialMoeda);
                                }
                            }
                            $('#spanRodada').text(rodada);
                            if (obj.IdTipoLeilao == ""3"" || obj.IdTipoLeilao == ""4"") {
                                valorLance = obj.DescAtributoPrecoPrazo;
                            } else {
                                valorLance = ""R$ *****"";
                            }
                            $('#lancesDosConcorrentes').prepend('<tr class=""usuarioOnline"" style=""color:green"">' +
                                '<td class=""text-center"">' + rodada +");
                WriteLiteral(@" '</td>' +
                                '<td>' + obj.Data.substr(8, 2) + ""-"" + obj.Data.substr(5, 2) + ""-"" + obj.Data.substr(0, 4) + "" "" +
                                obj.Data.substr(11, 2) + "":"" + obj.Data.substr(14, 2) + "":"" + obj.Data.substr(17, 2) + '</td>' +
                                '<td>' + valorLance + '</td>' + '</tr>');
                        }
                    });
                }
            });

            connection.on('broadcastFornecedorHistorico', function (idCompradorSender, fLancesJson, idFornecedorSender) {
                console.log(""broadcastFornecedorHistorico entrada rodada: "" + rodada + "" fornecedor = "" + idFornecedor + "" idFornecedorSender= "" + idFornecedorSender);
                if (idComprador == idCompradorSender && idFornecedorSender == idFornecedor) {
                    var fLancesJsonArray = JSON.parse(fLancesJson);
                    $('#meuHistorico').empty();
                     $.each(fLancesJsonArray, function (idx, obj) {
           ");
                WriteLiteral(@"              if (obj.rodada == 4) {
                             debugger
                             return false;
                         }
                         if (obj.Rodada == 0 || obj.Rodada == null) {
                            rodada = ""Única"";
                        } else {
                            rodada = obj.Rodada;
                        }
                        if (idFornecedorSender == idFornecedor && idFornecedorSender == obj.IdFornecedor) {
                            console.log(""broadcastFornecedorHistorico entrou rodada: "" + rodada + "" fornecedor = "" + idFornecedor + "" obj.fornecedor = "" + obj.IdFornecedor);
                            $('#meuHistorico').prepend('<tr class=""meuHistorico"" style=""color:black"">' +
                                '<td class=""text-center"">' + rodada + '</td>' +
                                '<td>' + obj.Data.substr(8, 2) + ""-"" + obj.Data.substr(5, 2) + ""-"" + obj.Data.substr(0, 4) + "" "" +
                                obj.Data.su");
                WriteLiteral(@"bstr(11, 2) + "":"" + obj.Data.substr(14, 2) + "":"" + obj.Data.substr(17, 2) + '</td>' +
                                '<td>' + obj.DescAtributoPrecoPrazo + '</td>' + '</tr>');
                        }
                    });
                }
            });

            async function start() {
                try {
                    await connection.start();
                    console.log(""SignalR PainelFornecedor Connected = "" + connection.connection.connectionId);
                    console.log(""SignalR Connected entrada idComprador: "" + idComprador + "" idLeilao: "" + idLeilao);
                    connection.invoke('SendFornecedor', idComprador, idFornecedor, idLeilao);
                    function callServer() {
                        console.log(""SignalR Connected entrou idComprador: "" + idComprador + "" idLeilao: "" + idLeilao);
                        connection.invoke('SendFornecedor', idComprador, idFornecedor, idLeilao);
                    }
                    timeintervalCal");
                WriteLiteral(@"lServer = setInterval(callServer, 10000);
                } catch (err) {
                    console.log(err);
                    setTimeout(start, 10000);
                }
            };
            connection.onclose(start);
            start();
        });

        function getTimeRemaining(endtime) {
            var t = Date.parse(endtime) - Date.parse(new Date());
            var seconds = Math.floor((t / 1000) % 60);
            var minutes = Math.floor((t / 1000 / 60) % 60);
            return {
                'total': t,
                'minutes': minutes,
                'seconds': seconds
            };
        }

        function initializeClock(id, endtime) {
            var clock = document.getElementById(id);
            var minutesSpan = clock.querySelector('.minutesClock');
            var secondsSpan = clock.querySelector('.secondsClock');
            function updateClock() {
                var t = getTimeRemaining(endtime);
                minutesSpan.innerHTM");
                WriteLiteral(@"L = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);
                if (t.total <= 0) {
                    console.log(""initializeClock t.total <= 0: "" + t.total);
                    clearInterval(timeinterval);
                    $(""#mensagemInicial"").show();
                    $('#AtributoPrecoPrazo').prop('disabled', true);
                    $('#divNovoLance').hide();
                    $('#formCancelar').hide();
                    return false;
                }
            }
            updateClock();
            var timeinterval = setInterval(updateClock, 1000);
        }



        function initializeClockRodada1(id, endtime) {
            var clock = document.getElementById(id);
            var minutesSpan = clock.querySelector('.minutesClockRodada');
            var secondsSpan = clock.querySelector('.secondsClockRodada');
            function updateClockRodada1() {
                var t = getTimeRemaining(endtime);
   ");
                WriteLiteral(@"             minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);
                if (t.total <= 0) {
                    clearInterval(timeintervalRodada);
                    $("".minutesClockRodada"").text(""00"");
                    $("".secondsClockRodada"").text(""00"");
                    var currentTimeRodada = Date.parse('");
#nullable restore
#line 652 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                   Write(ViewBag.DataFechamentoRodada2);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                    console.log(\"initializeClockRodada1 rodada=1 rodada: \" + rodada + \" time: \" + t.minutes + \"/\" + t.seconds + \"/\" + t.total + \"/ fechamento\" + \'");
#nullable restore
#line 653 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                                                                                                                             Write(ViewBag.DataFechamentoRodada2);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
                    var deadlineRodada = new Date(currentTimeRodada + DAYS * HOURS * 1 * 0 * MILLISECONDS);
                    initializeClockRodada2('clockdivRodada', deadlineRodada);
                }
            }
            updateClockRodada1();
            var timeintervalRodada = setInterval(updateClockRodada1, 1000);
        }

        function initializeClockRodada2(id, endtime) {
            var clock = document.getElementById(id);
            var minutesSpan = clock.querySelector('.minutesClockRodada');
            var secondsSpan = clock.querySelector('.secondsClockRodada');
            function updateClockRodada2() {
                var t = getTimeRemaining(endtime);
                minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);
                if (t.total <= 0) {
                    clearInterval(timeintervalRodada2);
                    $("".minutesClockRodada"").text(""00"");
                    $(""");
                WriteLiteral(".secondsClockRodada\").text(\"00\");\r\n                    console.log(\"initializeClockRodada2 rodada=1 rodada: \" + rodada + \" time: \" + t.minutes + \"/\" + t.seconds + \"/\" + t.total + \"/ fechamento\" + \'");
#nullable restore
#line 674 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                                                                                                                             Write(ViewBag.DataFechamentoRodada3);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                    var currentTimeRodada = Date.parse(\'");
#nullable restore
#line 675 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                   Write(ViewBag.DataFechamentoRodada3);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
                    var deadlineRodada = new Date(currentTimeRodada + DAYS * HOURS * 1 * 0 * MILLISECONDS);
                    initializeClockRodada3('clockdivRodada', deadlineRodada);
                }
            }
            updateClockRodada2();
            var timeintervalRodada2 = setInterval(updateClockRodada2, 1000);
        }

        function initializeClockRodada3(id, endtime) {
            var clock = document.getElementById(id);
            var minutesSpan = clock.querySelector('.minutesClockRodada');
            var secondsSpan = clock.querySelector('.secondsClockRodada');
            function updateClockRodada3() {
                var t = getTimeRemaining(endtime);
                minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);
               if (t.total <= 0) {
                    clearInterval(timeintervalRodada3);
                    $("".minutesClockRodada"").text(""00"");
                    $(""");
                WriteLiteral(@".secondsClockRodada"").text(""00"");
                    console.log(""initializeClockRodada3 rodada=3 rodada: "" + rodada + "" time: "" + t.minutes + ""/"" + t.seconds + ""/"" + t.total);
                    $("".minutesClock"").text(""00"");
                    $("".secondsClock"").text(""00"");
                    return false;
                }
            }
            updateClockRodada3();
            var timeintervalRodada3 = setInterval(updateClockRodada3, 1000);
        }


        var DAYS = 1;
        var HOURS = 1;
        var MINUTES = 0;
        var SECONDS = 0;
        var MINUTESRODADA = 0;
        var SECONDSRODADA = 0;
        MINUTES = ");
#nullable restore
#line 713 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
             Write(ViewBag.MinutoEncerramento);

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        SECONDS = ");
#nullable restore
#line 714 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
             Write(ViewBag.SegundoEncerramento);

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        MINUTESRODADA = ");
#nullable restore
#line 715 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                   Write(ViewBag.MinutoEncerramentoRodada);

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        SECONDSRODADA = ");
#nullable restore
#line 716 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                   Write(ViewBag.SegundoEncerramentoRodada);

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        var MILLISECONDS = 1000;\r\n        var timeInMinutes = 10;\r\n        var currentTime = Date.parse(\'");
#nullable restore
#line 719 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                 Write(ViewBag.DataFechamento);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
        var deadline = new Date(currentTime + DAYS * HOURS * MINUTES * SECONDS * MILLISECONDS);
        if (SECONDS > 0 || MINUTES > 0) {
            initializeClock('clockdiv', deadline);
            if (idTipoLeilao == ""3"" || idTipoLeilao == ""4"") {
                console.log(""initializeClockRodada START rodada=1 rodada: "" + rodada  + ""/ fechamento"" + '");
#nullable restore
#line 724 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                                                                                     Write(ViewBag.DataFechamentoRodada1);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                var currentTimeRodada = Date.parse(\'");
#nullable restore
#line 725 "D:\Copiar\LR - github\LR\Views\FornecedorLeilao\PainelFornecedor.cshtml"
                                               Write(ViewBag.DataFechamentoRodada1);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
                var deadlineRodada = new Date(currentTimeRodada + DAYS * HOURS * MINUTESRODADA * SECONDSRODADA * MILLISECONDS);
                initializeClockRodada1('clockdivRodada', deadlineRodada);
            }
        } else {
            $(""#mensagemInicial"").show();
            $("".minutesClock"").text(""00"");
            $("".secondsClock"").text(""00"");
            $("".minutesClockRodada"").text(""00"");
            $("".secondsClockRodada"").text(""00"");
            $('#AtributoPrecoPrazo').prop('disabled', true);
            $('#divNovoLance').hide();
            $('#formCancelar').hide();
    }

</script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LR.Models.Leilao> Html { get; private set; }
    }
}
#pragma warning restore 1591
